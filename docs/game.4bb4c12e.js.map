{"version":3,"sources":["src/utils/checklimits.js","src/actors/Zelda.js","src/utils/randomPos.js","src/actors/Rupee.js","src/gameManager.js","src/game.js"],"names":["checkLimits","pos","x","y","zeldaSprites","require","Zelda","color","speed","directionX","directionY","image","Image","src","ctx","delta","fillStyle","newPos","fillRect","drawImage","key","randomY","Math","floor","random","randomX","RedRupee","Rupee","x_speed","direction_x","y_speed","direction_y","state","points","touched","frame","Manager","intervalID","rupees","chrono","setInterval","coin","push","zelda","rupee","xDiff","yDiff","distance","sqrt","document","getElementById","play","toFixed","translate","font","fillText","getChrono","myManager","reqAnimFram","window","addEventListener","canvas","getContext","music","volume","hey","laugh","actors","lastFrame","render","time","coins","forEach","getDistance","superActors","actor","update","clearRect","save","draw","restore","start","cancelAnimationFrame","pause","confirm","location","reload","close","requestAnimationFrame","_e","e","keyboardEventDown","keyboardEventUp"],"mappings":"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","file":"game.4bb4c12e.js","sourceRoot":"..","sourcesContent":["const checkLimits = (pos) => {\r\n  if (pos.x < 585 && pos.x > 15 && pos.y < 350 && pos.y > 130) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport default checkLimits;\r\n","/* eslint-disable operator-linebreak */\r\n/* eslint-disable max-len */\r\n/* eslint-disable comma-dangle */\r\n/* eslint-disable no-restricted-properties */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable no-unused-vars */\r\nimport checkLimits from \"../utils/checklimits\";\r\n\r\nconst zeldaSprites = require(\"../../assets/ZeldaSprites.png\");\r\n\r\nclass Zelda {\r\n  constructor(pos = { x: 290, y: 275 }, color = \"#0d9263\") {\r\n    this.color = color;\r\n    this.pos = pos;\r\n    this.speed = 1;\r\n    this.directionX = 0;\r\n    this.directionY = 0;\r\n    this.image = new Image();\r\n    this.image.src = zeldaSprites;\r\n  }\r\n\r\n  draw(ctx, delta) {\r\n    ctx.fillStyle = this.color;\r\n    const newPos = {\r\n      x: this.pos.x + this.directionX * this.speed,\r\n      y: this.pos.y + this.directionY * this.speed,\r\n    };\r\n    if (checkLimits(newPos)) {\r\n      this.pos = newPos;\r\n    }\r\n    ctx.fillRect(this.pos.x, this.pos.y, 5, 5);\r\n    ctx.drawImage(\r\n      this.image,\r\n      90,\r\n      140,\r\n      40,\r\n      50,\r\n      this.pos.x - 10,\r\n      this.pos.y - 27,\r\n      30,\r\n      40\r\n    );\r\n  }\r\n\r\n  keyboardEventDown(key) {\r\n    if (key === \"ArrowRight\") {\r\n      this.directionX = 1;\r\n      this.directionY = 0;\r\n    } else if (key === \"ArrowLeft\") {\r\n      this.directionX = -1;\r\n      this.directionY = 0;\r\n    } else if (key === \"ArrowDown\") {\r\n      this.directionY = 1;\r\n      this.directionX = 0;\r\n    } else if (key === \"ArrowUp\") {\r\n      this.directionY = -1;\r\n      this.directionX = 0;\r\n    }\r\n  }\r\n\r\n  keyboardEventUp(key) {\r\n    if (key === \"ArrowRight\") {\r\n      this.directionX = 0;\r\n    } else if (key === \"ArrowLeft\") {\r\n      this.directionX = 0;\r\n    } else if (key === \"ArrowDown\") {\r\n      this.directionY = 0;\r\n    } else if (key === \"ArrowUp\") {\r\n      this.directionY = 0;\r\n    }\r\n  }\r\n}\r\n\r\nexport { Zelda };\r\n","const randomY = () => Math.floor(Math.random() * (130 - 340)) + 340;\r\n\r\nconst randomX = () => Math.floor(Math.random() * (575 - 25)) + 25;\r\n\r\nexport { randomY, randomX };\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable class-methods-use-this */\r\nimport { randomX, randomY } from \"../utils/randomPos\";\r\n\r\nconst RedRupee = require(\"../../assets/RedRupee.png\");\r\n\r\nclass Rupee {\r\n  constructor(pos = { x: randomX(), y: randomY() }, color = \"#0d9263\") {\r\n    this.color = color;\r\n    this.pos = { x: randomX(), y: randomY() };\r\n    this.x_speed = 5;\r\n    this.direction_x = 1;\r\n    this.y_speed = 5;\r\n    this.direction_y = 1;\r\n    this.state = true;\r\n    this.points = 0;\r\n    this.touched = false;\r\n    this.image = new Image();\r\n    this.image.src = RedRupee;\r\n  }\r\n\r\n  update(frame) {}\r\n\r\n  draw(ctx, delta) {\r\n    if (this.state) {\r\n      ctx.fillStyle = this.color;\r\n      ctx.fillRect(this.pos.x, this.pos.y, 3, 3);\r\n      ctx.drawImage(this.image, this.pos.x - 10, this.pos.y - 10, 25, 25);\r\n    }\r\n  }\r\n\r\n  keyboardEventDown(key) {}\r\n\r\n  keyboardEventUp(key) {}\r\n}\r\n\r\nexport { Rupee };\r\n","/* eslint-disable no-cond-assign */\r\n/* eslint-disable no-constant-condition */\r\n/* eslint-disable no-alert */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable class-methods-use-this */\r\nimport { Rupee } from \"./actors/Rupee\";\r\n\r\nclass Manager {\r\n  constructor(pos = { x: 10, y: 20 }) {\r\n    this.state = true;\r\n    this.intervalID = null;\r\n    this.rupees = [];\r\n    this.pos = pos;\r\n    this.chrono = 60;\r\n    this.points = 0;\r\n  }\r\n\r\n  start() {\r\n    if (this.state) {\r\n      this.intervalID = setInterval(() => {\r\n        const coin = new Rupee();\r\n        this.rupees.push(coin);\r\n      }, 1000);\r\n      this.state = false;\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    this.state = false;\r\n  }\r\n\r\n  getDistance(zelda, rupee) {\r\n    const xDiff = zelda.pos.x - rupee.pos.x;\r\n    const yDiff = zelda.pos.y - rupee.pos.y;\r\n    const distance = Math.sqrt(xDiff * xDiff + yDiff * yDiff);\r\n    if (distance < 30 && rupee.touched === false) {\r\n      const rupeeEncounter = document.getElementById(\"rupee\");\r\n      rupeeEncounter.play();\r\n      rupee.state = false;\r\n      this.points += 1;\r\n      rupee.touched = true;\r\n    }\r\n    return distance;\r\n  }\r\n\r\n  update(delta, rupee) {\r\n    if (this.chrono >= 0) {\r\n      this.chrono -= 1 / 140;\r\n    } else {\r\n      this.chrono = 0;\r\n    }\r\n  }\r\n\r\n  getChrono() {\r\n    return this.chrono.toFixed(1);\r\n  }\r\n\r\n  draw(ctx, delta) {\r\n    ctx.translate(this.pos.x, this.pos.y);\r\n    ctx.font = \"18px Arial\";\r\n    ctx.fillStyle = \"black\";\r\n    ctx.fillText(`TIME: ${this.getChrono()}  -  RUPEES: ${this.points}`, 0, 0);\r\n  }\r\n\r\n  keyboardEventDown(key) {}\r\n\r\n  keyboardEventUp(key) {}\r\n}\r\n\r\nconst myManager = new Manager();\r\n\r\nexport { myManager };\r\n","/* eslint-disable comma-dangle */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-restricted-globals */\r\n/* eslint-disable no-alert */\r\n/* eslint-disable import/named */\r\nimport { Zelda } from \"./actors/Zelda\";\r\nimport { myManager } from \"./gameManager\";\r\n\r\nlet reqAnimFram = 0;\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n  const canvas = document.getElementById(\"root\");\r\n\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  const music = document.getElementById(\"music\");\r\n  music.volume = 0.2;\r\n  const hey = document.getElementById(\"hey\");\r\n  const laugh = document.getElementById(\"laugh\");\r\n\r\n  const actors = [new Zelda(), myManager];\r\n\r\n  let lastFrame = 0;\r\n  const render = (time) => {\r\n    const coins = [...myManager.rupees];\r\n    const delta = (time - lastFrame) / 1000;\r\n    lastFrame = time;\r\n    coins.forEach((rupee) => myManager.getDistance(actors[0], rupee));\r\n    const superActors = [...actors, ...coins];\r\n    superActors.forEach((actor) => actor.update && actor.update(delta));\r\n    ctx.clearRect(0, 0, 600, 400);\r\n    superActors.forEach((actor) => {\r\n      ctx.save();\r\n      actor.draw(ctx, delta);\r\n      ctx.restore();\r\n    });\r\n    myManager.start();\r\n\r\n    if (myManager.chrono <= 0) {\r\n      window.cancelAnimationFrame(reqAnimFram);\r\n      laugh.play();\r\n      music.pause();\r\n      const startAgain = window.confirm(\r\n        `Time over, you get ${myManager.points} rupees!!!\\nPress start to play again`\r\n      );\r\n      if (startAgain) {\r\n        location.reload();\r\n      } else {\r\n        window.close();\r\n      }\r\n    } else {\r\n      window.requestAnimationFrame(render);\r\n    }\r\n  };\r\n\r\n  const startButton = document.getElementById(\"start\");\r\n\r\n  startButton.addEventListener(\"click\", (_e) => {\r\n    hey.play();\r\n    music.play();\r\n    reqAnimFram = window.requestAnimationFrame(render);\r\n  });\r\n\r\n  window.addEventListener(\"keydown\", (e) => {\r\n    actors.forEach((actor) => actor.keyboardEventDown(e.key));\r\n  });\r\n  window.addEventListener(\"keyup\", (e) => {\r\n    actors.forEach((actor) => actor.keyboardEventUp(e.key));\r\n  });\r\n});\r\n"]}